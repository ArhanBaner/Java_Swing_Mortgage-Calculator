/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Arhan Banerjee
 */
import java.util.stream.*;
import java.text.*;
import java.awt.Color;
public class calcu extends javax.swing.JFrame {

    /**
     * Creates new form calcu
     */
    
    double[] numbers = new double[100];
    DecimalFormat dp2 = new DecimalFormat("0.00");
    
    
    
    public calcu() {
        initComponents();
        Color c = new Color(32, 67, 147);
        getContentPane().setBackground(c);                                      // Setting the background color to navy blue
        
        mort.setEnabled(true);
        
        monthly.setEnabled(true);
        l1.setVisible(false);
        l2.setVisible(false);
        l3.setVisible(false);
        l4.setVisible(false);
        monthlyamount.setVisible(false);
        totalyears.setVisible(false);
        annualint.setVisible(false);
        calcula.setVisible(false);
        amount.setVisible(false);
        mortamount.setVisible(false);
        years.setVisible(false);
        rate.setVisible(false);                                                 // All of these are editing the states of the buttons when the application is first
        ma.setVisible(false);                                                   // opened by making them visible (or not) and editing their colour
        yr.setVisible(false);
        ir.setVisible(false);
        calculate.setVisible(false);
        outputmonthly.setVisible(false);
        mo.setVisible(false);
        clear.setVisible(false);
        plus.setBackground(Color.orange);
        minus.setBackground(Color.orange);                                         
        multiply.setBackground(Color.orange);
        division.setBackground(Color.orange);
        clearall.setBackground(Color.orange);
        percent.setBackground(Color.orange);
        root.setBackground(Color.orange);
        enter.setBackground(Color.orange);
        calculate.setBackground(Color.orange);
        calcula.setBackground(Color.orange);
        clear.setBackground(Color.orange);
        monthly.setBackground(Color.orange);
        mort.setBackground(Color.orange);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        one = new javax.swing.JButton();
        two = new javax.swing.JButton();
        three = new javax.swing.JButton();
        four = new javax.swing.JButton();
        five = new javax.swing.JButton();
        six = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        enter = new javax.swing.JButton();
        output = new javax.swing.JTextField();
        plus = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        ctr = new javax.swing.JLabel();
        count = new javax.swing.JLabel();
        cnter = new javax.swing.JLabel();
        pluscount = new javax.swing.JLabel();
        numoftimes = new javax.swing.JLabel();
        entercounter = new javax.swing.JLabel();
        dot = new javax.swing.JButton();
        minuscount = new javax.swing.JLabel();
        numoftimes1 = new javax.swing.JLabel();
        multiply = new javax.swing.JButton();
        multiplycount = new javax.swing.JLabel();
        numoftimes2 = new javax.swing.JLabel();
        divcount = new javax.swing.JLabel();
        numoftimes3 = new javax.swing.JLabel();
        division = new javax.swing.JButton();
        output1 = new javax.swing.JLabel();
        clearall = new javax.swing.JButton();
        percent = new javax.swing.JButton();
        root = new javax.swing.JButton();
        rootnum = new javax.swing.JLabel();
        monthly = new javax.swing.JButton();
        mort = new javax.swing.JButton();
        ma = new javax.swing.JLabel();
        yr = new javax.swing.JLabel();
        ir = new javax.swing.JLabel();
        mortamount = new javax.swing.JTextField();
        years = new javax.swing.JTextField();
        rate = new javax.swing.JTextField();
        mo = new javax.swing.JLabel();
        outputmonthly = new javax.swing.JTextField();
        calculate = new javax.swing.JButton();
        l1 = new javax.swing.JLabel();
        l2 = new javax.swing.JLabel();
        l3 = new javax.swing.JLabel();
        monthlyamount = new javax.swing.JTextField();
        totalyears = new javax.swing.JTextField();
        annualint = new javax.swing.JTextField();
        calcula = new javax.swing.JButton();
        l4 = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });

        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });

        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });

        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });

        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });

        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });

        seven.setText("7");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });

        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });

        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });

        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });

        enter.setText("Enter");
        enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterActionPerformed(evt);
            }
        });

        output.setEditable(false);
        output.setBackground(new java.awt.Color(0, 0, 0));
        output.setForeground(new java.awt.Color(255, 255, 255));

        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        minus.setText("-");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        ctr.setText("0");

        count.setText("0");

        cnter.setText("0");

        pluscount.setText("0");

        numoftimes.setText("0");

        entercounter.setText("0");

        dot.setText(".");
        dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotActionPerformed(evt);
            }
        });

        minuscount.setText("0");

        numoftimes1.setText("0");

        multiply.setText("X");
        multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyActionPerformed(evt);
            }
        });

        multiplycount.setText("0");

        numoftimes2.setText("0");

        divcount.setText("0");

        numoftimes3.setText("0");

        division.setText("/");
        division.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divisionActionPerformed(evt);
            }
        });

        output1.setText("0");

        clearall.setText("Clear All");
        clearall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearallActionPerformed(evt);
            }
        });

        percent.setText("%");
        percent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentActionPerformed(evt);
            }
        });

        root.setText("√");
        root.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rootActionPerformed(evt);
            }
        });

        rootnum.setText("0");

        monthly.setText("Monthly Payment Amount");
        monthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthlyActionPerformed(evt);
            }
        });

        mort.setText("Mortgage Amount");
        mort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mortActionPerformed(evt);
            }
        });

        ma.setText("Mortgage Amount");

        yr.setText("Years");

        ir.setText("Annual Interest Rate (%)");

        mortamount.setBackground(new java.awt.Color(0, 0, 0));
        mortamount.setForeground(new java.awt.Color(255, 255, 255));

        years.setBackground(new java.awt.Color(0, 0, 0));
        years.setForeground(new java.awt.Color(255, 255, 255));
        years.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearsActionPerformed(evt);
            }
        });

        rate.setBackground(new java.awt.Color(0, 0, 0));
        rate.setForeground(new java.awt.Color(255, 255, 255));
        rate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateActionPerformed(evt);
            }
        });

        mo.setText("Monthly Amount");

        outputmonthly.setEditable(false);
        outputmonthly.setBackground(new java.awt.Color(0, 0, 0));
        outputmonthly.setForeground(new java.awt.Color(255, 255, 255));

        calculate.setText("Enter");
        calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateActionPerformed(evt);
            }
        });

        l1.setText("Monthly Amount");

        l2.setText("Years");

        l3.setText("Annual Interest Rate (%)");

        monthlyamount.setBackground(new java.awt.Color(0, 0, 0));
        monthlyamount.setForeground(new java.awt.Color(255, 255, 255));

        totalyears.setBackground(new java.awt.Color(0, 0, 0));
        totalyears.setForeground(new java.awt.Color(255, 255, 255));

        annualint.setBackground(new java.awt.Color(0, 0, 0));
        annualint.setForeground(new java.awt.Color(255, 255, 255));

        calcula.setText("Enter");
        calcula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculaActionPerformed(evt);
            }
        });

        l4.setText("Mortgage Amount");

        amount.setEditable(false);
        amount.setBackground(new java.awt.Color(0, 0, 0));
        amount.setForeground(new java.awt.Color(255, 255, 255));

        clear.setText("Clear All");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(divcount, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(numoftimes3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addComponent(output1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(505, 505, 505)
                        .addComponent(rootnum, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(numoftimes2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(entercounter, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(numoftimes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cnter, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(multiplycount, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(minuscount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addComponent(numoftimes1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(pluscount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                    .addComponent(ctr, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(clear)))))
                .addGap(439, 439, 439))
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(multiply, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(division, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(three, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(six, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(dot, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(output))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(clearall, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(percent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(root, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(157, 157, 157)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(yr)
                                    .addComponent(ma)
                                    .addComponent(ir)
                                    .addComponent(mo))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(55, 55, 55)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(years, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rate, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(mortamount, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(l2)
                                            .addComponent(l1)
                                            .addComponent(l3)
                                            .addComponent(l4))
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(outputmonthly, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(calculate))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(calcula, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(monthlyamount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalyears, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(annualint, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(amount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(monthly)
                                .addGap(194, 194, 194)
                                .addComponent(mort)))
                        .addGap(202, 202, 202))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthly)
                    .addComponent(mort))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(plus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(minus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(multiply)
                                .addGap(3, 3, 3)
                                .addComponent(division))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(one)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(four))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(two)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(five)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(eight)
                                        .addGap(3, 3, 3)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(zero)
                                            .addComponent(dot)))
                                    .addComponent(seven)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(nine)
                                            .addComponent(root))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(enter))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(three)
                                    .addComponent(clearall))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(six)
                                    .addComponent(percent)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(ir))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ma)
                                    .addComponent(mortamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(yr)
                                    .addComponent(years, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(77, 77, 77))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l1)
                            .addComponent(monthlyamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l2)
                            .addComponent(totalyears, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(l3)
                            .addComponent(annualint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(calcula)
                            .addComponent(calculate))
                        .addGap(36, 36, 36)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mo)
                    .addComponent(outputmonthly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ctr)
                    .addComponent(cnter))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pluscount)
                            .addComponent(count)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(clear)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numoftimes)
                    .addComponent(minuscount))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entercounter)
                    .addComponent(numoftimes1))
                .addGap(26, 26, 26)
                .addComponent(multiplycount)
                .addGap(18, 18, 18)
                .addComponent(numoftimes2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(divcount)
                    .addComponent(rootnum))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numoftimes3)
                    .addComponent(output1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        // TODO add your handling code here:
        
   
        
        int plus= Integer.parseInt(pluscount.getText());
        int minus= Integer.parseInt(minuscount.getText());
        int mult= Integer.parseInt(multiplycount.getText());
        int div= Integer.parseInt(divcount.getText());
        
        String text = output.getText();
        if((plus >=1 || minus >=1 || mult>=1 || div>=1) && (text.charAt(0) == '+' || text.charAt(0) == '-' || text.charAt(0) == 'X' || text.charAt(0) == '/'))
        {
            output.setText("1");
        }
        
        else
        {
            output.setText(text + "1");
        }
        
        
    
        
    }//GEN-LAST:event_oneActionPerformed

    
    
    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
        // TODO add your handling code here:
        
        minuscount.setText("0");
        numoftimes1.setText("0");
        multiplycount.setText("0");
        numoftimes2.setText("0");
        divcount.setText("0");
        numoftimes3.setText("0");
        
        int enter= Integer.parseInt(entercounter.getText());
        if (enter >=1)
        {
            pluscount.setText("0");
            
            for (int counter =0; counter<10; counter++)
            {
                numbers[counter]=0;
            }
        }
        
        int arraycnter= Integer.parseInt(pluscount.getText());                  
        double number= Double.parseDouble(output.getText());                // Stores number in array
        numbers[arraycnter] = number;
        output.setText("+");
        arraycnter++;
        ctr.setText("" + arraycnter);
        
        
        
        int plus= Integer.parseInt(pluscount.getText());                  // How many times this is clicked
        plus++;
        pluscount.setText("" + plus);
        
        int ctr11= Integer.parseInt(numoftimes.getText());                  // How many times this is clicked
        ctr11++;
        numoftimes.setText("" + ctr11);
        
        
    }//GEN-LAST:event_plusActionPerformed

    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
        // TODO add your handling code here:
        
        int enter= Integer.parseInt(entercounter.getText());                    // How many times the enter button is clicked
        enter++;
        entercounter.setText("" + enter);
        
        
        int arraycnter= Integer.parseInt(pluscount.getText());
        int arraycnter1= Integer.parseInt(minuscount.getText());            // How many times the minus button is clicked
        int arraycnter2= Integer.parseInt(multiplycount.getText());
        int arraycnter3= Integer.parseInt(divcount.getText());
        
        double number= Double.parseDouble(output.getText());                // Stores number in array
        
        if (arraycnter>=1)
        {
            numbers[arraycnter] = number;
            arraycnter++;
            ctr.setText("" + arraycnter);
        }
        else if(arraycnter1 >=1)
        {
            numbers[arraycnter1] = number;
            arraycnter1++;
            ctr.setText("" + arraycnter1);
        }
        else if (arraycnter2 >=1)
        {
            numbers[arraycnter2] = number;
            arraycnter2++;
            ctr.setText("" + arraycnter2);
        }
        else if (arraycnter3 >=1)
        {
            numbers[arraycnter3] = number;
            arraycnter3++;
            ctr.setText("" + arraycnter3);
        }
        
        
        
        
        
        double  sum=0, indi, sum1, sum2, summ=1;
        int ctr11= Integer.parseInt(numoftimes.getText());              // How many times the plus button is clicked
        int ctr111= Integer.parseInt(numoftimes1.getText());            // How many times the minus button is clicked
        int ctr22= Integer.parseInt(numoftimes2.getText());             // How many times the multiply button is clicked
        int ctr222= Integer.parseInt(numoftimes3.getText());            //How many times the division button is clicked
        
        int clicked= Integer.parseInt(ctr.getText());                   // How many one's were clicked
         
       
        if (ctr11>=1)                                                   // Using the previous values to do the appropriate calculation
        {
            for (int i = 0; i<clicked; i++)
            {
                indi =numbers[i];
                sum = sum + indi;
                output.setText("" + dp2.format(sum));                  // Addition
            }
            
        }
        else if (ctr111>=1)
        {
            for (int i = 0; i<clicked; i++)
            {
                indi =numbers[i];                                      // Subtraction
                sum = (indi - sum);
                output.setText("" + dp2.format(sum));
                sum1 = Double.parseDouble(output.getText());
                sum2 = (-1)*sum1;
                output.setText("" + dp2.format(sum2));
            }
        }
        else if (ctr22>=1)                                             // Multiplication
        {
            for (int i = 0; i<clicked; i++)
            {
                indi =numbers[i];
                summ = summ*indi;
                output.setText("" + dp2.format(summ));
            }
        }
        else if (ctr222>=1)                                            // Division
        {
            if (ctr222<2)
            {
            for (int i = 0; i<clicked; i++)
            {
                if (i==0)
                {
                    indi =numbers[i];
                    summ = indi/summ;
                    
                }
                else
                {
                    indi =numbers[i];
                    summ = summ/indi;
                    output.setText("" + dp2.format(summ));
                    output1.setText("" + dp2.format(summ));
                }
                
                
            }
            
            }
            double secnum = Double.parseDouble(output1.getText());
            if (ctr222>=2)
            {
            double secnum1 = Double.parseDouble(output.getText());
            output.setText("" + dp2.format((secnum/secnum1)));
            output1.setText("" + dp2.format(secnum/secnum1));
            }
            
        }
        int root= Integer.parseInt(rootnum.getText());
        if (root>=1)                                                            // Square Rooting
        {
            double rootnumber = Double.parseDouble(output.getText());
            rootnumber = Math.sqrt(rootnumber);
            output.setText("" + dp2.format(rootnumber));
            rootnum.setText("0");
        }
        
        
        entercounter.setText("0");
        
        
       
        
    }//GEN-LAST:event_enterActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        // TODO add your handling code here:
        
      
       
        int plus= Integer.parseInt(pluscount.getText());
        int minus= Integer.parseInt(minuscount.getText());
        int mult= Integer.parseInt(multiplycount.getText());
        int div= Integer.parseInt(divcount.getText());
        String text = output.getText();
        if((plus >=1 || minus >=1 || mult>=1 || div>=1) && (text.charAt(0) == '+' || text.charAt(0) == '-' || text.charAt(0) == 'X' || text.charAt(0) == '/'))
        {
            output.setText("2");
        }
        
        else
        {
            output.setText(text + "2");
        }
        
        
        
    }//GEN-LAST:event_twoActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        // TODO add your handling code here:
        
     
       
        int plus= Integer.parseInt(pluscount.getText());
        int minus= Integer.parseInt(minuscount.getText());
        int mult= Integer.parseInt(multiplycount.getText());
        int div= Integer.parseInt(divcount.getText());
        String text = output.getText();
        if((plus >=1 || minus >=1 || mult>=1 || div>=1) && (text.charAt(0) == '+' || text.charAt(0) == '-' || text.charAt(0) == 'X' || text.charAt(0) == '/'))
        {
            output.setText("9");
        }
        
        else
        {
            output.setText(text + "9");
        }
        
        
    }//GEN-LAST:event_nineActionPerformed

    private void dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotActionPerformed
        // TODO add your handling code here:
        
        int number= Integer.parseInt(output.getText());
        output.setText(number + ".");
        
    }//GEN-LAST:event_dotActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        // TODO add your handling code here:
        
        int plus= Integer.parseInt(pluscount.getText());
        int minus= Integer.parseInt(minuscount.getText());
        int mult= Integer.parseInt(multiplycount.getText());
        int div= Integer.parseInt(divcount.getText());
        String text = output.getText();
        if((plus >=1 || minus >=1 || mult>=1 || div>=1) && (text.charAt(0) == '+' || text.charAt(0) == '-' || text.charAt(0) == 'X' || text.charAt(0) == '/'))
        {
            output.setText("3");
        }
        
        else
        {
            output.setText(text + "3");
        }
    }//GEN-LAST:event_threeActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        // TODO add your handling code here:
        int plus= Integer.parseInt(pluscount.getText());
        int minus= Integer.parseInt(minuscount.getText());
        int mult= Integer.parseInt(multiplycount.getText());
        int div= Integer.parseInt(divcount.getText());
        String text = output.getText();
        if((plus >=1 || minus >=1 || mult>=1 || div>=1) && (text.charAt(0) == '+' || text.charAt(0) == '-' || text.charAt(0) == 'X' || text.charAt(0) == '/'))
        {
            output.setText("4");
        }
        
        else
        {
            output.setText(text + "4");
        }
    }//GEN-LAST:event_fourActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        // TODO add your handling code here:
        int plus= Integer.parseInt(pluscount.getText());
        int minus= Integer.parseInt(minuscount.getText());
        int mult= Integer.parseInt(multiplycount.getText());
        int div= Integer.parseInt(divcount.getText());
        String text = output.getText();
        if((plus >=1 || minus >=1 || mult>=1 || div>=1) && (text.charAt(0) == '+' || text.charAt(0) == '-' || text.charAt(0) == 'X' || text.charAt(0) == '/'))
        {
            output.setText("5");
        }
        
        else
        {
            output.setText(text + "5");
        }
    }//GEN-LAST:event_fiveActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        // TODO add your handling code here:
        int plus= Integer.parseInt(pluscount.getText());
        int minus= Integer.parseInt(minuscount.getText());
        int mult= Integer.parseInt(multiplycount.getText());
        int div= Integer.parseInt(divcount.getText());
        String text = output.getText();
        if((plus >=1 || minus >=1 || mult>=1 || div>=1) && (text.charAt(0) == '+' || text.charAt(0) == '-' || text.charAt(0) == 'X' || text.charAt(0) == '/'))
        {
            output.setText("6");
        }
        
        else
        {
            output.setText(text + "6");
        }
    }//GEN-LAST:event_sixActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        // TODO add your handling code here:
        int plus= Integer.parseInt(pluscount.getText());
        int minus= Integer.parseInt(minuscount.getText());
        int mult= Integer.parseInt(multiplycount.getText());
        int div= Integer.parseInt(divcount.getText());
        String text = output.getText();
        if((plus >=1 || minus >=1 || mult>=1 || div>=1) && (text.charAt(0) == '+' || text.charAt(0) == '-' || text.charAt(0) == 'X' || text.charAt(0) == '/'))
        {
            output.setText("7");
        }
        
        else
        {
            output.setText(text + "7");
        }
    }//GEN-LAST:event_sevenActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        // TODO add your handling code here:
        int plus= Integer.parseInt(pluscount.getText());
        int minus= Integer.parseInt(minuscount.getText());
        int mult= Integer.parseInt(multiplycount.getText());
        int div= Integer.parseInt(divcount.getText());
        String text = output.getText();
        if((plus >=1 || minus >=1 || mult>=1 || div>=1) && (text.charAt(0) == '+' || text.charAt(0) == '-' || text.charAt(0) == 'X' || text.charAt(0) == '/'))
        {
            output.setText("8");
        }
        
        else
        {
            output.setText(text + "8");
        }
    }//GEN-LAST:event_eightActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        // TODO add your handling code here:
        int plus= Integer.parseInt(pluscount.getText());
        int minus= Integer.parseInt(minuscount.getText());
        int mult= Integer.parseInt(multiplycount.getText());
        int div= Integer.parseInt(divcount.getText());
        String text = output.getText();
        if((plus >=1 || minus >=1 || mult>=1 || div>=1) && (text.charAt(0) == '+' || text.charAt(0) == '-' || text.charAt(0) == 'X' || text.charAt(0) == '/'))
        {
            output.setText("0");
        }
        
        else
        {
            output.setText(text + "0");
        }
    }//GEN-LAST:event_zeroActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        // TODO add your handling code here:
        
        pluscount.setText("0");
        numoftimes.setText("0");
        multiplycount.setText("0");
        numoftimes2.setText("0");
        divcount.setText("0");
        numoftimes3.setText("0");
        
        int enter= Integer.parseInt(entercounter.getText());
        if (enter >=1)
        {
            minuscount.setText("0"); 
            
            for (int counter =0; counter<100; counter++)
            {
                numbers[counter]=0;
            }
        }
        
        int arraycnter= Integer.parseInt(minuscount.getText());                  
        double number= Double.parseDouble(output.getText());                // Stores number in array
        numbers[arraycnter] = number;
        output.setText("-");
        arraycnter++;
        ctr.setText("" + arraycnter);
        
        
       
        
        int minus= Integer.parseInt(minuscount.getText());                  // How many times this is clicked
        minus++;
        minuscount.setText("" + minus);
        
        int ctr11= Integer.parseInt(numoftimes1.getText());                  // How many times this is clicked
        ctr11++;
        numoftimes1.setText("" + ctr11);
        
    }//GEN-LAST:event_minusActionPerformed

    private void multiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyActionPerformed
        // TODO add your handling code here:
        
        pluscount.setText("0");
        numoftimes.setText("0");
        minuscount.setText("0");
        numoftimes1.setText("0");
        divcount.setText("0");
        numoftimes3.setText("0");
        
        int enter= Integer.parseInt(entercounter.getText());
        if (enter >=1)
        {
            multiplycount.setText("0"); 
            
            for (int counter =0; counter<100; counter++)
            {
                numbers[counter]=0;
            }
        }
        
        int arraycnter= Integer.parseInt(multiplycount.getText());                  
        double number= Double.parseDouble(output.getText());                // Stores number in array
        numbers[arraycnter] = number;
        output.setText("X");
        arraycnter++;
        ctr.setText("" + arraycnter);
        
        
       
        
        int multiply= Integer.parseInt(multiplycount.getText());                  // How many times this is clicked
        multiply++;
        multiplycount.setText("" + multiply);
        
        int mult= Integer.parseInt(numoftimes2.getText());                  // How many times this is clicked
        mult++;
        numoftimes2.setText("" + mult);
        
    }//GEN-LAST:event_multiplyActionPerformed

    private void divisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divisionActionPerformed
        // TODO add your handling code here:
        
        pluscount.setText("0");
        numoftimes.setText("0");
        minuscount.setText("0");
        numoftimes1.setText("0");
        multiplycount.setText("0");
        numoftimes2.setText("0");
        
        int enter= Integer.parseInt(entercounter.getText());
        if (enter >=1)
        {
            divcount.setText("0"); 
            
            for (int counter =0; counter<100; counter++)
            {
                numbers[counter]=0;
            }
        }
        
        int arraycnter= Integer.parseInt(divcount.getText());                  
        double number= Double.parseDouble(output.getText());                // Stores number in array
        numbers[arraycnter] = number;
        output.setText("/");
        arraycnter++;
        ctr.setText("" + arraycnter);
        
        
       
        
        int divide= Integer.parseInt(divcount.getText());                  // How many times this is clicked
        divide++;
        divcount.setText("" + divide);
        
        int div= Integer.parseInt(numoftimes3.getText());                  // How many times this is clicked
        div++;
        numoftimes3.setText("" + div);
    }//GEN-LAST:event_divisionActionPerformed

    private void clearallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearallActionPerformed
        // TODO add your handling code here:
        
        output.setText("");
        pluscount.setText("0");
        numoftimes.setText("0");
        minuscount.setText("0");
        numoftimes1.setText("0");
        multiplycount.setText("0");
        numoftimes2.setText("0");
        divcount.setText("0");
        numoftimes3.setText("0");
        ctr.setText("0");
        output1.setText("0");
        
        
        for (int i=0; i<100; i++)
        {
            numbers[i] = 0;                                     // Writes zero to all the numbers in the array
        }
        
    }//GEN-LAST:event_clearallActionPerformed

    private void percentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentActionPerformed
        // TODO add your handling code here:
        
        double num = Double.parseDouble(output.getText());
        num = num * 0.01;
        output.setText("" + num);
        
    }//GEN-LAST:event_percentActionPerformed

    private void rootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rootActionPerformed
        // TODO add your handling code here:
        
        int num= Integer.parseInt(rootnum.getText());
        num++;
        rootnum.setText("" + num);
    }//GEN-LAST:event_rootActionPerformed

    private void yearsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearsActionPerformed

    private void rateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rateActionPerformed

    private void monthlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthlyActionPerformed
        // TODO add your handling code here:
         
        mort.setEnabled(false);
        mortamount.setVisible(true);
        years.setVisible(true);
        rate.setVisible(true);
        ma.setVisible(true);
        yr.setVisible(true);
        ir.setVisible(true);
        calculate.setVisible(true);
        outputmonthly.setVisible(true);
        mo.setVisible(true);
        clear.setVisible(true);
       
        
        
        
        
        
    }//GEN-LAST:event_monthlyActionPerformed

    private void calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateActionPerformed
        // TODO add your handling code here:
        double mortgage = Double.parseDouble(mortamount.getText());
        double year = Double.parseDouble(years.getText());
        double interest = Double.parseDouble(rate.getText());
        double secinterest = ((interest/100)/12);
        double secyear = (year*12);
        
        
        
        double amnt = ((((secinterest)*(Math.pow(1 + secinterest, secyear)))/((Math.pow(1 + secinterest, secyear)) - 1))*mortgage);         // Using the Mortgage Interest Formula
        outputmonthly.setText("" + dp2.format(amnt));
    }//GEN-LAST:event_calculateActionPerformed

    private void mortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mortActionPerformed
        // TODO add your handling code here:
        
        monthly.setEnabled(false);
        l1.setVisible(true);
        l2.setVisible(true);
        l3.setVisible(true);
        l4.setVisible(true);
        monthlyamount.setVisible(true);
        totalyears.setVisible(true);
        annualint.setVisible(true);
        calcula.setVisible(true);
        amount.setVisible(true);
        clear.setVisible(true);
        
        
        
    }//GEN-LAST:event_mortActionPerformed

    private void calculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculaActionPerformed
        // TODO add your handling code here:
        
        double monthlyamnt = Double.parseDouble(monthlyamount.getText());
        double year = Double.parseDouble(totalyears.getText());
        double interest = Double.parseDouble(annualint.getText());
        double secinterest = ((interest/100)/12);
        double secyear = (year*12);
        
        
        
        double amnt = (monthlyamnt/((((secinterest)*(Math.pow(1 + secinterest, secyear)))/((Math.pow(1 + secinterest, secyear)) - 1))));
        amount.setText("" + dp2.format(amnt));
        
        
    }//GEN-LAST:event_calculaActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        
        mortamount.setText("");
        years.setText("");
        rate.setText("");
        outputmonthly.setText("");
        mortamount.setVisible(false);
        years.setVisible(false);
        rate.setVisible(false);
        ma.setVisible(false);
        yr.setVisible(false);
        ir.setVisible(false);
        calculate.setVisible(false);
        outputmonthly.setVisible(false);
        mo.setVisible(false);
        
        monthly.setEnabled(true);
        mort.setEnabled(true);
        
        monthlyamount.setText("");
        totalyears.setText("");
        annualint.setText("");
        amount.setText("");
        l1.setVisible(false);
        l2.setVisible(false);
        l3.setVisible(false);
        l4.setVisible(false);
        monthlyamount.setVisible(false);
        totalyears.setVisible(false);
        annualint.setVisible(false);
        calcula.setVisible(false);
        amount.setVisible(false);
        
        
        
        
    }//GEN-LAST:event_clearActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calcu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calcu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JTextField annualint;
    private javax.swing.JButton calcula;
    private javax.swing.JButton calculate;
    private javax.swing.JButton clear;
    private javax.swing.JButton clearall;
    private javax.swing.JLabel cnter;
    private javax.swing.JLabel count;
    private javax.swing.JLabel ctr;
    private javax.swing.JLabel divcount;
    private javax.swing.JButton division;
    private javax.swing.JButton dot;
    private javax.swing.JButton eight;
    private javax.swing.JButton enter;
    private javax.swing.JLabel entercounter;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JLabel ir;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel l2;
    private javax.swing.JLabel l3;
    private javax.swing.JLabel l4;
    private javax.swing.JLabel ma;
    private javax.swing.JButton minus;
    private javax.swing.JLabel minuscount;
    private javax.swing.JLabel mo;
    private javax.swing.JButton monthly;
    private javax.swing.JTextField monthlyamount;
    private javax.swing.JButton mort;
    private javax.swing.JTextField mortamount;
    private javax.swing.JButton multiply;
    private javax.swing.JLabel multiplycount;
    private javax.swing.JButton nine;
    private javax.swing.JLabel numoftimes;
    private javax.swing.JLabel numoftimes1;
    private javax.swing.JLabel numoftimes2;
    private javax.swing.JLabel numoftimes3;
    private javax.swing.JButton one;
    private javax.swing.JTextField output;
    private javax.swing.JLabel output1;
    private javax.swing.JTextField outputmonthly;
    private javax.swing.JButton percent;
    private javax.swing.JButton plus;
    private javax.swing.JLabel pluscount;
    private javax.swing.JTextField rate;
    private javax.swing.JButton root;
    private javax.swing.JLabel rootnum;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JButton three;
    private javax.swing.JTextField totalyears;
    private javax.swing.JButton two;
    private javax.swing.JTextField years;
    private javax.swing.JLabel yr;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
